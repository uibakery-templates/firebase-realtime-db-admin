id: '17159310693190.03761327677683579'
definitionId: popupForm
parentSlotId: '2'
styles:
  xl:
    gridItem:
      x: 0
      y: 182
      w: 1
      h: 9
    flex:
      size:
        widthValue: auto
        heightValue: 36
        heightUnit: px
      grow: '0'
      shrink: '0'
    modalSize:
      widthValue: 300
      widthUnit: px
      heightValue: auto
      heightUnit: '-'
      minWidthValue: 0
      minWidthUnit: px
      minHeightValue: 0
      minHeightUnit: px
      maxWidthValue: none
      maxWidthUnit: null
      maxHeightValue: none
      maxHeightUnit: null
  xs:
    gridItem:
      x: 0
      y: 366
      w: 23
      h: 9
    flex:
      size:
        widthValue: auto
        heightValue: 36
        heightUnit: px
      grow: '0'
      shrink: '0'
properties:
  dynamicFields:
    value: []
    dataValue: |-
      [
        {
          "prop": "id",
          "type": "number",
          "primaryKey": true
        },
        "name",
        {
          "prop": "avatar",
          "type": "image"
        },
        {
          "prop": "email",
          "type": "link"
        }
      ]
    withData: false
  entity: ''
  name: fetchtasksPopupform
  __UIBAKERY__RESPONSIVE__SHOW__CONDITION__CODE__:
    - xl
    - xs
  title: Assign task
  closeOnEsc: true
  closeOnBackdrop: true
  closeOnSuccess: true
  buttonHidden:
    value: true
    dataValue: 'false'
    withData: false
  buttonText: ''
  columns: '1'
actions:
  changeEvent: []
  submitEvent:
    - action: '17159451645470.5287626331663051'
      paramCode: ''
      index: 0
slots:
  - id: '17159310693190.11795650916685974'
    name: structure
    children:
      - id: '17159354908650.6726404761618352'
        definitionId: atomicSelect
        parentSlotId: '17159310693190.11795650916685974'
        styles:
          xl:
            visible: true
        properties:
          name: atomicSelect
          prop: task
          __UIBAKERY__RESPONSIVE__SHOW__CONDITION__CODE__:
            - xl
            - xs
          options:
            value:
              - value: Implement User Authentication
                color: primary
                __UIBAKERY__SYSTEM_ID__: '17159392599410.20993763068039661'
              - value: Implement SEO Strategy
                color: success
                __UIBAKERY__SYSTEM_ID__: '17159392599410.40689097647682115'
              - value: Upgrade Server Infrastructure
                color: warning
                __UIBAKERY__SYSTEM_ID__: '17159392599410.7550615802754297'
              - value: Develop New Product Features
                color: danger
                __UIBAKERY__SYSTEM_ID__: '17159392599410.3524033964331008'
              - value: Create Social Media Content Calendar
                color: info
                __UIBAKERY__SYSTEM_ID__: '17159392599410.7690967766673664'
              - value: Conduct Performance Appraisals
                color: primary-dark
                __UIBAKERY__SYSTEM_ID__: '17159392599410.5046003013734308'
              - value: Implement Bug Fixes
                color: success-dark
                __UIBAKERY__SYSTEM_ID__: '17159392599410.6344213372353205'
              - value: Organize Customer Feedback Session
                color: warning-dark
                __UIBAKERY__SYSTEM_ID__: '17159392599410.4863877742462446'
              - value: Create Training Materials
                color: danger-dark
                __UIBAKERY__SYSTEM_ID__: '17159392599410.6732034025442812'
              - value: Prepare Sales Forecast
                color: info-dark
                __UIBAKERY__SYSTEM_ID__: '17159392599410.354143445608621'
            dataValue: >-
              {{state.allTasks.map(task => { return {value: task.id, title:
              task.title} } )}}
            withData: true
          title: Task
          required:
            value: true
            dataValue: 'false'
            withData: false
        index: 1
        slots: []
      - id: '17159435312020.2886535276228217'
        definitionId: atomicSelect
        parentSlotId: '17159310693190.11795650916685974'
        styles: {}
        properties:
          name: atomicSelect5
          prop: employee
          __UIBAKERY__RESPONSIVE__SHOW__CONDITION__CODE__:
            - xl
            - xs
          options:
            value: []
            dataValue: ''
            withData: true
          mappedValue: >-
            {{`${ui.employeeTable.selectedRow.data.first_name}
            ${ui.employeeTable.selectedRow.data.last_name}` }}
          editContentHidden:
            value: false
            dataValue: 'true'
            withData: true
          editModeValue: '{{ui.employeeTable.selectedRow.data.id}} '
          forceView: true
        index: 0
        slots: []
